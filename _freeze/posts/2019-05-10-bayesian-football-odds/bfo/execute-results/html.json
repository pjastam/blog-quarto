{
  "hash": "777ddc5d3149213df74478d52ea9b1fc",
  "result": {
    "markdown": "---\ntitle: \"Modeling match results in the Dutch Eredivisie using a hierarchical Bayesian Poisson model\"\ndescription: \"This is an application of the original work of Rasmus Baath to the Dutch football competiton. The model is trained on the game results of 5 historical seasons.\"\nauthor: \"Piet Stam\"\ndate: \"2019-05-10T18:00:00Z\"\ndate-modified: \"2019-07-14T18:00:00Z\"\ncategories: [sports analytics, R]\nimage: \"feature.png\"\nimage-alt: \"Image credit: [**Wikimedia**](https://nl.wikipedia.org/wiki/Thomas_Bayes#/media/Bestand:Thomas_Bayes.gif)\"\nreference-location: margin\n---\n\n\n## Introduction\n\n### Quick summary\n\nWe applied the original work of [Rasmus\nBaath](http://www.sumsar.net/about.html) to the Dutch Eredivisie\nfootball competition. With `r-bayesian-football-odds` we estimated the\nodds of football matches in the last two weeks of the 2018/2019 Dutch\nEredivisie football competiton. We provide the code and evaluate the\nresults of our predictions.\n\n### Acknowledgements\n\nThis piece of work is based on the works of [Rasmus\nBaath](http://www.sumsar.net/blog/2013/07/modeling-match-results-in-la-liga-part-one/).\nRasmus Baath submitted his code to the [UseR 2013 data analysis\ncontest](https://www.r-project.org/conferences/useR-2013/) and licensed\nit under the Creative Commons [Attribution 3.0 Unported\nlicense](http://creativecommons.org/licenses/by/3.0/).\n\nHe predicted the results of the 50 last matches of the 2012/2013 Spanish\nLaLiga season. He used data of the 2008/09-2012/13 seasons (5 seasons in\ntotal) to estimate his regression model in a\n[Bayesian](https://en.wikipedia.org/wiki/Bayes_estimator) way. See [this\nthread](https://stats.stackexchange.com/questions/252577/bayes-regression-how-is-it-done-in-comparison-to-standard-regression)\nfor an intuitive explanation of the difference between the bayesian\napproach and the conventional approaches of linear regression and\nmaximum likelihood.\n\nI slightly adpated his code to predict the results of the last two\ncompetition rounds (that is, the last 18 matches) of the 2018/2019 Dutch\nEredivisie season. These predictions are based on soccer match data of\nthe 2014/15-2018/19 seasons (5 seasons in total). The source of these\ndata is [here](http://www.football-data.co.uk/netherlandsm.php). Out of\nthe three model specifications that Rasmus developed, I used the most\nsophisticated model that allowed for year-to-year variability in team\nskill (called \"iteration 3\" by Rasmus).\n\nYou can find my code at\n[GitHub](https://github.com/pjastam/r-bayesian-football-odds). Rasmus\ndeserves all the credits, I deserve all the blame in case of any errors\nin my application to the Dutch football competition.\n\n## Data and methods\n\n### Theoretical description of the model\n\nThe first thing to notice is that not all teams are equally good.\nTherefore, it will be assumed that all teams have a latent skill\nvariable and the skill of a team *minus* the skill of the opposing team\ndefines the predicted outcome of a game. As the number of goals are\nassumed to be Poisson distributed it is natural that the skills of the\nteams are on the log scale of the mean of the distribution.\n\nIn its simplest form, the distribution of the number of goals for team\n[\\\\(i\\\\)]{.math .inline} when facing team [\\\\(j\\\\)]{.math .inline} is\nthen\n\n[\\\\\\[Goals\\_{i,j} \\\\sim \\\\text{Poisson}(\\\\lambda\\_{i,j})\\\\\\]]{.math\n.display}\n\n[\\\\\\[\\\\log(\\\\lambda\\_{i,j}) = \\\\text{baseline} + \\\\text{skill}\\_i -\n\\\\text{skill}\\_j\\\\\\]]{.math .display}\n\nwhere baseline is the log average number of goals when both teams are\nequally good. Note that this model description does not capture the\nvariation in the number of goals among football seasons and between home\nvs away teams.\n\nIf we do allow for the latter type of variation, then the distribution\nof the goal outcome of a match between home team [\\\\(i\\\\)]{.math\n.inline} and away team [\\\\(j\\\\)]{.math .inline} in season\n[\\\\(t\\\\)]{.math .inline} can be described as follows:\n\n[\\\\\\[HomeGoals\\_{t,i,j} \\\\sim\n\\\\text{Poison}(\\\\lambda\\_{\\\\text{home},t,i,j})\\\\\\]]{.math .display}\n[\\\\\\[AwayGoals\\_{t,i,j} \\\\sim\n\\\\text{Poison}(\\\\lambda\\_{\\\\text{away},t,i,j})\\\\\\]]{.math .display}\n[\\\\\\[\\\\log(\\\\lambda\\_{\\\\text{home},t,i,j}) =\n\\\\text{baseline}\\_{\\\\text{home},t} + \\\\text{skill}\\_{t,i} -\n\\\\text{skill}\\_{t,j}\\\\\\]]{.math .display}\n[\\\\\\[\\\\log(\\\\lambda\\_{\\\\text{away},t,i,j}) =\n\\\\text{baseline}\\_{\\\\text{away},t} + \\\\text{skill}\\_{t,j} -\n\\\\text{skill}\\_{t,i}\\\\\\]]{.math .display}\n\nNote that the `baseline` is split into `home_baseline` and\n`away_baseline` in order to account for the home advantage.\n\nI set the prior distributions over the baseline and the skill of all\n[\\\\(n\\\\)]{.math .inline} teams in season [\\\\(t\\\\)]{.math .inline} to:\n\n[\\\\\\[\\\\text{baseline}\\_{\\\\text{home},t} \\\\sim \\\\text{Normal}(0,\n4\\^2)\\\\\\]]{.math .display} [\\\\\\[\\\\text{baseline}\\_{\\\\text{away},t} \\\\sim\n\\\\text{Normal}(0, 4\\^2)\\\\\\]]{.math .display}\n\nI set the prior distributions over the skill of all [\\\\(n\\\\)]{.math\n.inline} teams in season [\\\\(t\\\\)]{.math .inline} to:\n\n[\\\\\\[\\\\text{skill}\\_{t,1 \\\\ldots n} \\\\sim\n\\\\text{Normal}(\\\\text{skill}\\_{t-1,1 \\\\ldots n},\n\\\\sigma\\_{\\\\text{seasons}}\\^2)\\\\\\]]{.math .display}\n[\\\\\\[\\\\sigma\\_\\\\text{seasons} \\\\sim \\\\text{Uniform}(0, 3)\\\\\\]]{.math\n.display}\n\nand the priors over the skill of all [\\\\(n\\\\)]{.math .inline} teams in\ntheir [\\\\(first\\\\)]{.math .inline} season modeled as:\n\n[\\\\\\[\\\\text{skill}\\_{1,1 \\\\ldots n} \\\\sim\n\\\\text{Normal}(\\\\mu\\_\\\\text{teams},\n\\\\sigma\\_{\\\\text{teams}}\\^2)\\\\\\]]{.math .display}\n[\\\\\\[\\\\mu\\_\\\\text{teams} \\\\sim \\\\text{Normal}(0, 4\\^2)\\\\\\]]{.math\n.display} [\\\\\\[\\\\sigma\\_\\\\text{teams} \\\\sim \\\\text{Uniform}(0,\n3)\\\\\\]]{.math .display}\n\nWe choose very vague priors. For example, the prior on the baseline have\na SD of 4 but since this is on the log scale of the mean number of goals\nit corresponds to one SD from the mean [\\\\(0\\\\)]{.math .inline} covering\nthe range of [\\\\(\\[0.02, 54.6\\]\\\\)]{.math .inline} goals. A very wide\nprior indeed.\n\n### Read data\n\nWe first read the Dutch soccer match data of the 2014/15-2018/19 Dutch\nEredivisie seasons from the original csv-files and cache them. The\nresult is a database called `eredivisie`.\n\n``` r\nfrom_year <- 2014\nto_year <- 2019\nsource(paste0(\"functions/Import_Data_Eredivisie.R\"))\n```\n\nThen the cached `eredivisie` data are cleaned and new variables are\ncreated.\n\n``` r\neredivisie <- eredivisie %>%\n  mutate(MatchResult = sign(HomeGoals - AwayGoals)) # -1 Away win, 0 Draw, 1 Home win\n\n# Creating a data frame d with only the complete match results\nd <- na.omit(eredivisie)\n\n# Lists with the unique names of all teams and all seasons in the database\nteams <- unique(c(d$HomeTeam, d$AwayTeam))\nseasons <- unique(d$Season)\n\n# A list for JAGS with the data from d where the strings are coded as integers\ndata_list <- list(HomeGoals = d$HomeGoals, AwayGoals = d$AwayGoals, \n                  HomeTeam = as.numeric(factor(d$HomeTeam, levels=teams)),\n                  AwayTeam = as.numeric(factor(d$AwayTeam, levels=teams)),\n                  Season = as.numeric(factor(d$Season, levels=seasons)),\n                  n_teams = length(teams), n_games = nrow(d), \n                  n_seasons = length(seasons))\n```\n\nThe data set `eredivisie` contains data from 5 different seasons. In\nthis model we allow for variability in year-to-year team performance.\nThis variablitity in team performance can be demonstrated by the\nfollowing diagram, which shows that some teams do not even participate\nin all seasons in the `eredivisie` data set, as a result of dropping out\nof the first division:\n\n``` r\nqplot(Season, HomeTeam, data=d, ylab=\"Team\", xlab = \"Season\")\n```\n\n![](results/participation_by_season.png){width=\"630\"}\n\n\n## Estimation, simulation and validation\n\n### Model estimation\n\nTurning this into a JAGS model results in the following string. Note\nthat the model loops over all seasons and all match results. JAGS\nparameterizes the normal distribution with precision (the reciprocal of\nthe variance) instead of variance so the hyper priors have to be\nconverted. Finally, we \\\"anchor\\\" the skill of one team to a constant\notherwise the mean skill can drift away freely. Doing these adjustments\nresults in the following model description:\n\n``` r\nm3_string <- \"model {\nfor(i in 1:n_games) {\nHomeGoals[i] ~ dpois(lambda_home[Season[i], HomeTeam[i],AwayTeam[i]])\nAwayGoals[i] ~ dpois(lambda_away[Season[i], HomeTeam[i],AwayTeam[i]])\n}\n\nfor(season_i in 1:n_seasons) {\nfor(home_i in 1:n_teams) {\nfor(away_i in 1:n_teams) {\nlambda_home[season_i, home_i, away_i] <- exp( home_baseline[season_i] + skill[season_i, home_i] - skill[season_i, away_i])\nlambda_away[season_i, home_i, away_i] <- exp( away_baseline[season_i] + skill[season_i, away_i] - skill[season_i, home_i])\n}\n}\n}\n\nskill[1, 1] <- 0 \nfor(j in 2:n_teams) {\nskill[1, j] ~ dnorm(group_skill, group_tau)\n}\n\ngroup_skill ~ dnorm(0, 0.0625)\ngroup_tau <- 1/pow(group_sigma, 2)\ngroup_sigma ~ dunif(0, 3)\n\nhome_baseline[1] ~ dnorm(0, 0.0625)\naway_baseline[1] ~ dnorm(0, 0.0625)\n\nfor(season_i in 2:n_seasons) {\nskill[season_i, 1] <- 0 \nfor(j in 2:n_teams) {\nskill[season_i, j] ~ dnorm(skill[season_i - 1, j], season_tau)\n}\nhome_baseline[season_i] ~ dnorm(home_baseline[season_i - 1], season_tau)\naway_baseline[season_i] ~ dnorm(away_baseline[season_i - 1], season_tau)\n}\n\nseason_tau <- 1/pow(season_sigma, 2) \nseason_sigma ~ dunif(0, 3) \n}\"\n```\n\nWe then run this model directly from R using RJAGS and the\n`textConnection` function. This takes about half an hour on my computer,\nbut of course this depends on the configuration at hand.\n\n``` r\n# Compiling the model\nm3 <- jags.model(textConnection(m3_string), data=data_list, n.chains=3, n.adapt=10000)\n# Burning some samples on the altar of the MCMC god\nupdate(m3, 10000)\n# Generating MCMC samples\ns3 <- coda.samples(m3, variable.names=c(\"home_baseline\", \"away_baseline\",\"skill\", \"season_sigma\", \"group_sigma\", \"group_skill\"), n.iter=40000, thin=8)\n# Merging the three MCMC chains into one matrix\nms3 <- as.matrix(s3)\n```\n\nThe following graphs shows the trace plots and probability distributions\nof the team mean, team sigma and season sigma parameters, respectively.\n\n``` r\nplot(s3[, \"group_skill\"])\n```\n\n![](results/mu_sigma_params-1.png){width=\"810\"}\n\n``` r\nplot(s3[, \"group_sigma\"])\n```\n\n![](results/mu_sigma_params-2.png){width=\"810\"}\n\n``` r\nplot(s3[, \"season_sigma\"])\n```\n\n![](results/mu_sigma_params-3.png){width=\"810\"}\n\nWe can also calculate the default home advantage by looking at the\ndifference between `exp(home_baseline) - exp(away_baseline)`. The next\ngraph shows that there is a home advantage of more than 0.4 goals, on\naverage, and it differs significantly from zero.\n\n``` r\nplotPost(exp(ms3[,col_name(\"home_baseline\",to_year-from_year)]) - exp(ms3[,col_name(\"away_baseline\",to_year-from_year)]), compVal = 0, xlab = \"Home advantage in number of goals\")\n```\n\n![](results/overall_home_advantage-1.png){width=\"810\"}\n\n    ###                                        mean    median      mode hdiMass\n    ### Home advantage in number of goals 0.4288232 0.4248015 0.4162575    0.95\n    ###                                      hdiLow   hdiHigh compVal pcGTcompVal\n    ### Home advantage in number of goals 0.2880692 0.6003385       0           1\n    ###                                   ROPElow ROPEhigh pcInROPE\n    ### Home advantage in number of goals      NA       NA       NA\n\n\n### Generating predictions (in- and out-of-sample)\n\nIn the `eredivisie` data set included in this project, the results of\nthe 18 last games of the 2018/2019 season are missing. Using our model\nwe can now both predict and simulate the outcomes of these 18 games. The\nR code below calculates a number of measures for each game (both the\ngames with known and unknown outcomes):\n\n-   The mode of the simulated number of goals, that is, the *most\n    likely* number of scored goals. If we were asked to bet on the\n    number of goals in a game this is what we would use.\n-   The mean of the simulated number of goals, this is our best guess of\n    the average number of goals in a game.\n-   The most likely match result for each game.\n-   A random sample from the distributions of credible home scores, away\n    scores and match results. This is how the Eredivisie actually could\n    have played out in an alternative reality.\n\n``` r\nn <- nrow(ms3)\nm3_pred <- sapply(1:nrow(eredivisie), function(i) {\n  home_team <- which(teams == eredivisie$HomeTeam[i])\n  away_team <- which(teams == eredivisie$AwayTeam[i])\n  season <- which(seasons == eredivisie$Season[i])\n  home_skill <- ms3[, col_name(\"skill\", season, home_team)] \n  away_skill <- ms3[, col_name(\"skill\", season, away_team)]\n  home_baseline <- ms3[, col_name(\"home_baseline\", season)]\n  away_baseline <- ms3[, col_name(\"away_baseline\", season)]\n  \n  home_goals <- rpois(n, exp(home_baseline + home_skill - away_skill))\n  away_goals <- rpois(n, exp(away_baseline + away_skill - home_skill))\n  home_goals_table <- table(home_goals)\n  away_goals_table <- table(away_goals)\n  match_results <- sign(home_goals - away_goals)\n  match_results_table <- table(match_results)\n  \n  mode_home_goal <- as.numeric(names(home_goals_table)[ which.max(home_goals_table)])\n  mode_away_goal <- as.numeric(names(away_goals_table)[ which.max(away_goals_table)])\n  match_result <-  as.numeric(names(match_results_table)[which.max(match_results_table)])\n  rand_i <- sample(seq_along(home_goals), 1)\n  \n  c(mode_home_goal = mode_home_goal, mode_away_goal = mode_away_goal, match_result = match_result,\n    mean_home_goal = mean(home_goals), mean_away_goal = mean(away_goals),\n    rand_home_goal = home_goals[rand_i], rand_away_goal = away_goals[rand_i],\n    rand_match_result = match_results[rand_i])\n})\nm3_pred <- t(m3_pred)\n```\n\n\n### Model validation\n\nFirst let\\'s compare the distribution of the actual number of goals in\nthe data with the predicted mode, mean and randomized number of goals\nfor all the games (focusing on the number of goals for the home team).\n\nFirst the actual distribution of the number of goals for the home teams.\n\n``` r\nhist(eredivisie$HomeGoals, breaks= (-1:max(eredivisie$HomeGoals, na.rm=TRUE)) + 0.5, xlim=c(-0.5, 10), main = \"Distribution of the number of goals\\nscored by a home team in a match\",\n    xlab = \"\")\n```\n\n![](results/hist_home_goal-1.png){width=\"360\"}\n\nThis next plot shows the distribution of the modes from the predicted\ndistribution of home goals from each game. That is, what is the most\nprobable outcome, for the home team, in each game.\n\n``` r\nhist(m3_pred[ , \"mode_home_goal\"], breaks= (-1:max(m3_pred[ , \"mode_home_goal\"])) + 0.5, xlim=c(-0.5, 10),\n    main = \"Distribution of predicted most \\nprobable score by a home team in\\na match\",\n    xlab = \"\")\n```\n\n![](results/mode_home_goal-1.png){width=\"360\"}\n\nFor almost all games the single most likely number of goals is one.\nActually, if you know nothing about an Eredivisie game, betting on one\ngoal for the home team is 78 % of the times the best bet.\n\nLet\\'s instead look at the distribution of the predicted mean number of\nhome goals in each game.\n\n``` r\nhist(m3_pred[ , \"mean_home_goal\"], breaks= (-1:max(m3_pred[ , \"mean_home_goal\"])) + 0.5, xlim=c(-0.5, 10),\n    main = \"Distribution of predicted mean \\n score by a home team in a match\",\n    xlab = \"\")\n```\n\n![](results/mean_home_goal-1.png){width=\"360\"}\n\nFor most games the expected number of goals are 2. That is, even if your\nsafest bet is one goal you would expect to see around two goals.\n\nThe distribution of the mode and the mean number of goals doesn't look\nremotely like the actual number of goals. This was not to be expected,\nwe would however expect the distribution of randomized goals (where for\neach match the number of goals has been randomly drawn from that match's\npredicted home goal distribution) to look similar to the actual number\nof home goals. Looking at the histogram below, this seems to be the\ncase.\n\n``` r\nhist(m3_pred[ , \"rand_home_goal\"], breaks= (-1:max(m3_pred[ , \"rand_home_goal\"])) + 0.5, xlim=c(-0.5, 10),\n    main = \"Distribution of randomly drawn \\n score by a home team in a match\",\n    xlab = \"\")\n```\n\n![](results/rand_home_goal-1.png){width=\"360\"}\n\nWe can also look at how well the model predicts the data. This should\nprobably be done using cross validation, but as the number of effective\nparameters are much smaller than the number of data points a direct\ncomparison should at least give an estimated prediction accuracy in the\nright ballpark.\n\n``` r\nmean(eredivisie$HomeGoals == m3_pred[ , \"mode_home_goal\"], na.rm=T)\n```\n\n    ### [1] 0.3150232\n\n``` r\nmean((eredivisie$HomeGoals - m3_pred[ , \"mean_home_goal\"])^2, na.rm=T)\n```\n\n    ### [1] 1.509597\n\nSo on average the model predicts the correct number of home goals 31% of\nthe time and guesses the average number of goals with a mean squared\nerror of 1.51. Now we'll look at the actual and predicted match\noutcomes. The graph below shows the match outcomes in the data with 1\nbeing a home win, 0 being a draw and -1 being a win for the away team.\n\n``` r\nhist(eredivisie$MatchResult, breaks= (-2:1) + 0.5, xlim=c(-1.5, 1.5), ylim=c(0, 1000), main = \"Actual match results\",\n    xlab = \"\")\n```\n\n![](results/hist_actual_match_result-1.png){width=\"360\"}\n\nNow looking at the most probable outcomes of the matches according to\nthe model.\n\n``` r\nhist(m3_pred[ , \"match_result\"], breaks= (-2:1) + 0.5, xlim=c(-1.5, 1.5), ylim=c(0, 1000), main = \"Predicted match results\",\n    xlab = \"\")\n```\n\n![](results/hist_pred_match_result-1.png){width=\"360\"}\n\nFor almost all matches the safest bet is to bet on the home team. While\ndraws are not uncommon it is *never* the safest bet.\n\nAs in the case with the number of home goals, the randomized match\noutcomes have a distribution similar to the actual match outcomes:\n\n``` r\nhist(m3_pred[ , \"rand_match_result\"], breaks= (-2:1) + 0.5, xlim=c(-1.5, 1.5), ylim=c(0, 1000), main = \"Randomized match results\",\n    xlab = \"\")\n```\n\n![](results/hist_rand_match_result-1.png){width=\"360\"}\n\n``` r\nmean(eredivisie$MatchResult == m3_pred[ , \"match_result\"], na.rm=T)\n```\n\n    ### [1] 0.563865\n\nThe model predicts the correct match outcome (i.e. home team wins / a\ndraw / away team wins) 57% of the time. Pretty good!\n\n\n## Results\n\n### The ranking of the teams\n\nWe'll start by ranking the teams of the `Eredivisie` using the estimated\nskill parameters from the 2018/2019 season, which are based on the\nestimation sample of the five seasons 2014/2015-2018/2019. Note that for\none of the teams the skill parameter is \"anchored at zero\". This\n\"anchoring\" is done for the very same \\\"identification\\\" reason that one\nof the parameters in a traditional logit analysis is always set to zero\nby default: the value of a parameter automatically follows if you\nalready know all the other parameters in your model and given the fact\nthat probabilities always sum up to 1 in total.\n\nConsequently, as Rasmus noted before, the skill parameters are difficult\nto interpret as they are relative to the skill of the team that had its\nskill parameter \"anchored\" at zero. To put them on a more interpretable\nscale the skill paramters are first zero centered by subtracting the\nmean skill of all teams. Then he added the home baseline and\nexponentiated the resulting values. These rescaled skill parameters are\nnow on the scale of expected number of goals when playing as a home\nteam.\n\n``` r\nteam_skill <- ms3[, str_detect(string=colnames(ms3), paste0(\"skill\\\\[\",to_year-from_year,\",\"))]\nteam_skill <- (team_skill - rowMeans(team_skill)) + ms3[, paste0(\"home_baseline[\",to_year-from_year,\"]\")]\nteam_skill <- exp(team_skill)\ncolnames(team_skill) <- teams\nteam_skill <- team_skill[,order(colMeans(team_skill), decreasing=T)]\nold_par <- par(mar=c(2,0.7,0.7,0.7), xaxs='i')\ncaterplot(team_skill, labels.loc=\"above\", val.lim=c(0.7, 3.8))\n```\n\n![](results/team_skill-1.png){width=\"810\"}\n\n``` r\npar(old_par)\n```\n\nTwo teams are clearly ahead of the rest, Ajax and PSV. Let\\'s look at\nthe credible difference between these two teams. Ajax is a better team\nthan PSV with a probabilty of 74%, i.e. the odds in favor of Ajax are\n74% / 26% = 3. So, on average, PSV only wins one out of four games that\nthey play against Ajax.\n\n``` r\nplotPost(team_skill[, \"Ajax\"] - team_skill[, \"PSV Eindhoven\"], compVal = 0, xlab = \"<- PSV     vs     Ajax ->\")\n```\n\n![](results/team_skill_PSV_Ajax-1.png){width=\"630\"}\n\n    ###                                mean    median      mode hdiMass     hdiLow\n    ### <- PSV     vs     Ajax -> 0.1616095 0.1535391 0.1467396    0.95 -0.3586123\n    ###                             hdiHigh compVal pcGTcompVal ROPElow ROPEhigh\n    ### <- PSV     vs     Ajax -> 0.6842824       0      0.7312      NA       NA\n    ###                           pcInROPE\n    ### <- PSV     vs     Ajax ->       NA\n\n\n### Predicting the future\n\nNow that we've checked that the model reasonably predicts the Eredivisie\nhistory let\\'s predict the Eredivisie endgame!\n\nAt the time when I executed my version of this model applied to the\nDutch Eredivisie competition (2019-05-10), most of the matches in the\n2018/2019 season had already been played. Yet two out of 34 competition\nrounds had to be played (that is, competition rounds 33 and 34). With\nthese two rounds still to go, Ajax and PSV both have 80 points, but Ajax\nleads the competition as their goal difference is larger (111-30 = 81)\nthan that of PSV (95-24 = 71). The code below displays the predicted\nmean and mode number of goals for the endgame and the predicted winner\nof each game.\n\n``` r\neredivisie_forecast <- eredivisie[is.na(eredivisie$HomeGoals), c(\"Season\", \"Week\", \"HomeTeam\", \"AwayTeam\")]\nm3_forecast <- m3_pred[is.na(eredivisie$HomeGoals),] \neredivisie_forecast$mean_home_goals <- round(m3_forecast[,\"mean_home_goal\"], 1) \neredivisie_forecast$mean_away_goals <- round(m3_forecast[,\"mean_away_goal\"], 1)\neredivisie_forecast$mode_home_goals <- m3_forecast[,\"mode_home_goal\"] \neredivisie_forecast$mode_away_goals <- m3_forecast[,\"mode_away_goal\"]\neredivisie_forecast$predicted_winner <- ifelse(m3_forecast[ , \"match_result\"] == 1, eredivisie_forecast$HomeTeam, \n                                           ifelse(m3_forecast[ , \"match_result\"] == -1, eredivisie_forecast$AwayTeam, \"Draw\"))\n\nrownames(eredivisie_forecast) <- NULL\nprint(xtable(eredivisie_forecast, align=\"cccccccccc\"), type=\"html\")\n```\n\n         Season     Week     HomeTeam        AwayTeam      mean_home_goals   mean_away_goals   mode_home_goals   mode_away_goals   predicted_winner\n  ---- ----------- ------ --------------- --------------- ----------------- ----------------- ----------------- ----------------- ------------------\n   1    2018/2019    40        Ajax           Utrecht           2.90              0.80              2.00              0.00               Ajax\n   2    2018/2019    40     AZ Alkmaar     PSV Eindhoven        1.30              1.90              1.00              1.00          PSV Eindhoven\n   3    2018/2019    40      Groningen      For Sittard         2.10              1.10              2.00              1.00            Groningen\n   4    2018/2019    40      Feyenoord       Den Haag           2.70              0.90              2.00              0.00            Feyenoord\n   5    2018/2019    40     Heerenveen       NAC Breda          2.20              1.00              2.00              0.00            Heerenveen\n   6    2018/2019    40       Vitesse       Graafschap          2.60              0.90              2.00              0.00             Vitesse\n   7    2018/2019    40      Willem II       FC Emmen           2.10              1.10              2.00              1.00            Willem II\n   8    2018/2019    40       Zwolle         VVV Venlo          1.90              1.20              1.00              1.00              Zwolle\n   9    2018/2019    40      Heracles        Excelsior          2.00              1.10              2.00              1.00             Heracles\n   10   2018/2019    40      Den Haag        Willem II          1.70              1.30              1.00              1.00             Den Haag\n   11   2018/2019    40     Graafschap         Ajax             0.80              3.00              0.00              2.00               Ajax\n   12   2018/2019    40       Utrecht       Heerenveen          2.00              1.20              2.00              1.00             Utrecht\n   13   2018/2019    40      NAC Breda        Zwolle            1.40              1.70              1.00              1.00              Zwolle\n   14   2018/2019    40    PSV Eindhoven     Heracles           3.10              0.70              2.00              0.00          PSV Eindhoven\n   15   2018/2019    40      FC Emmen        Groningen          1.30              1.70              1.00              1.00            Groningen\n   16   2018/2019    40      Excelsior      AZ Alkmaar          1.20              2.00              1.00              1.00            AZ Alkmaar\n   17   2018/2019    40     For Sittard      Feyenoord          1.00              2.30              1.00              2.00            Feyenoord\n   18   2018/2019    40      VVV Venlo        Vitesse           1.30              1.70              1.00              1.00             Vitesse\n\nThese predictions are perfectly useful if you want to bet on the likely\nwinner of each game. However, they do not reflect how the actual endgame\nwill play out, e.g., there is not a single draw in the\n`predicted_winner` column. So at last let\\'s look at a *possible*\nversion of the Eredivisie endgame by displaying the simulated match\nresults calculated earlier.\n\n``` r\neredivisie_sim <- eredivisie[is.na(eredivisie$HomeGoals), c(\"Season\", \"Week\", \"HomeTeam\", \"AwayTeam\")]\neredivisie_sim$home_goals <- m3_forecast[,\"rand_home_goal\"] \neredivisie_sim$away_goals <- m3_forecast[,\"rand_away_goal\"]\neredivisie_sim$winner <- ifelse(m3_forecast[ , \"rand_match_result\"] == 1, eredivisie_forecast$HomeTeam, \n                            ifelse(m3_forecast[ , \"rand_match_result\"] == -1, eredivisie_forecast$AwayTeam, \"Draw\"))\n\nrownames(eredivisie_sim) <- NULL\nprint(xtable(eredivisie_sim, align=\"cccccccc\"), type=\"html\")\n```\n\n         Season     Week     HomeTeam        AwayTeam      home_goals   away_goals      winner\n  ---- ----------- ------ --------------- --------------- ------------ ------------ ---------------\n   1    2018/2019    40        Ajax           Utrecht         1.00         1.00          Draw\n   2    2018/2019    40     AZ Alkmaar     PSV Eindhoven      0.00         2.00      PSV Eindhoven\n   3    2018/2019    40      Groningen      For Sittard       3.00         1.00        Groningen\n   4    2018/2019    40      Feyenoord       Den Haag         4.00         1.00        Feyenoord\n   5    2018/2019    40     Heerenveen       NAC Breda        3.00         2.00       Heerenveen\n   6    2018/2019    40       Vitesse       Graafschap        4.00         3.00         Vitesse\n   7    2018/2019    40      Willem II       FC Emmen         2.00         2.00          Draw\n   8    2018/2019    40       Zwolle         VVV Venlo        4.00         2.00         Zwolle\n   9    2018/2019    40      Heracles        Excelsior        4.00         0.00        Heracles\n   10   2018/2019    40      Den Haag        Willem II        1.00         1.00          Draw\n   11   2018/2019    40     Graafschap         Ajax           0.00         1.00          Ajax\n   12   2018/2019    40       Utrecht       Heerenveen        5.00         1.00         Utrecht\n   13   2018/2019    40      NAC Breda        Zwolle          2.00         1.00        NAC Breda\n   14   2018/2019    40    PSV Eindhoven     Heracles         2.00         2.00          Draw\n   15   2018/2019    40      FC Emmen        Groningen        0.00         2.00        Groningen\n   16   2018/2019    40      Excelsior      AZ Alkmaar        0.00         3.00       AZ Alkmaar\n   17   2018/2019    40     For Sittard      Feyenoord        0.00         3.00        Feyenoord\n   18   2018/2019    40      VVV Venlo        Vitesse         3.00         0.00        VVV Venlo\n\nNow we see a number of games resulting in a draw. We also see that Ajax\nand FC Utrecht tie in round 33, which puts PSV on top of the\nleaderboard! However, in round 34 the image is reversed when PSV and\nHeracles tie, against all odds. So, in the end, Ajax wins the\ncompetition in this *possible* version of the Eredivisie endgame by\ntheir better goal difference.\n\n\n### Betting on the match outcome\n\nOne of the powers with using Bayesian modeling and MCMC sampling is that\nonce you have the MCMC samples of the parameters it is straight forward\nto calculate any quantity resulting from these estimates while still\nretaining the uncertainty of the parameter estimates. So let\\'s look at\nthe predicted distribution of the number of goals for AZ Alkmaar vs PSV\nEindhoven game and see if I can use my model to make some money. I'll\nstart by using the MCMC samples to calculate the distribution of the\nnumber of goals for AZ Alkmaar and PSV Eindhoven.\n\n``` r\nplot_goals <- function(home_goals, away_goals) { \n  old_par <- par(mar = c(0, 0, 0, 0))\n  par(mfrow = c(2, 2), mar=rep(2.2, 4))\n  \n    n_matches <- length(home_goals) \n    goal_diff <- home_goals - away_goals \n    match_result <- ifelse(goal_diff < 0, \"away_win\", ifelse(goal_diff > 0, \"home_win\", \"equal\")) \n    hist(home_goals, xlim = c(-0.5, 10), breaks = (0:100) - 0.5)\n    hist(away_goals, xlim = c(-0.5, 10), breaks = (0:100) - 0.5) \n    hist(goal_diff, xlim = c(-6, 6), breaks = (-100:100) - 0.5)\n    barplot(table(match_result)/n_matches, ylim = c(0, 1))\n    par(old_par)\n}\n```\n\n``` r\nn <- nrow(ms3)\nhome_team <- which(teams == \"AZ Alkmaar\")\naway_team <- which(teams == \"PSV Eindhoven\")\nseason <- which(seasons == paste0(to_year-1,\"/\",to_year))\nhome_skill <- ms3[, col_name(\"skill\", season, home_team)] \naway_skill <- ms3[, col_name(\"skill\", season, away_team)]\nhome_baseline <- ms3[, col_name(\"home_baseline\", season)]\naway_baseline <- ms3[, col_name(\"away_baseline\", season)]\n\nhome_goals <- rpois(n, exp(home_baseline + home_skill - away_skill))\naway_goals <- rpois(n, exp(away_baseline + away_skill - home_skill))\n```\n\nLooking at summary of these two distributions in the first two graphs\nbelow, it shows that AZ and PSV both have the biggest chance to score\none goal (as the modus of both distributions equals 1). From the third\ngraph it follows that the most likely goal difference is 0 or -1: either\nAZ and PSV draw (0), or PSV scores just one more goal than AZ (-1). In\ncase of the latter, PSV turns out to be the match winner.\n\nThe fourth graph shows the probability distribution of a PSV win\n('away_win'), a draw ('equal') and AZ win ('home_win'). This graph\nunderlines that a PSV win is a likely scenario: it has a probability of\nmore than 50%. The fact that the balance topples in favor of PSV should\nthen be due to the one goal difference that is attributed a great chance\naccording to the third graph. Note, however, that the probability that\nPSV will *not* turn out as the match winner (i.e. a draw or a loss) is\nstill almost 50%.\n\n``` r\nold_par <- par(mfrow = c(2, 2), mar=rep(2.2, 4))\nplot_goals(home_goals, away_goals)\n```\n\n![](results/plot_goals-1.png){width=\"810\"}\n\n``` r\npar(old_par)\n```\n\nAt May 10th, that is just before the start of competition round 33, you\ngot the following payouts (that is, how much would I get back if my bet\nwas successful) for betting on the outcome of this game, after 288 bets\nbeing placed on the betting site [William\nHill](http://www.williamhill.com/)\n\n    AZ    Draw     PSV\n  ------ ------ ------\n   3.90   4.00    1.78\n\nUsing my simulated distribution of the number of goals I can calculate\nthe predicted payouts of the model. It appears that the payouts of the\nmodel are very close to the payouts that William Hill offers.\n\n``` r\n1 / c(AZ =  mean(home_goals > away_goals), Draw = mean(home_goals == away_goals), PSV = mean(home_goals < away_goals))\n```\n\n    ###       AZ     Draw      PSV \n    ### 3.928759 4.332756 1.943005\n\nThe most likely result is 1 - 1 with a predicted payout of 9.70, which\ncan be compared to the William Hill payout of 7.50 for this bet. Thus,\nWilliam Hill thinks that a 1 - 1 draw is even likier than our model\npredicts. If we want to earn some extra money, we should bet on a 1 - 0\nwin for AZ, as the William Hill payout is 19 and our model predicts\n17.50.\n\n\n### Betting on the correct score\n\nIt is also possible to bet on the final goal outcome so let\\'s calculate\nwhat payouts my model predicts for different goal outcomes. The payouts\nthat William Hill reports are\n\n          PSV 0   PSV 1   PSV 2   PSV 3   PSV 4\n  ------ ------- ------- ------- ------- -------\n  AZ 0     21      12      12      17      29\n  AZ 1     19      7.5     12      12      21\n  AZ 2     23      13      11      17      29\n  AZ 3     41      26      23      29      51\n  AZ 4     81      51      66      126     81\n\nIt follows that the 1 - 1 draw is also the most likely result at Wiliam\nHill. Now, we are going to calculate the payouts that our model\npredicts.\n\n``` r\ngoals_payout <- laply(0:6, function(home_goal) {\n  laply(0:6, function(away_goal) {\n    1 / mean(home_goals == home_goal & away_goals  == away_goal)\n  })\n})\n\ncolnames(goals_payout) <- paste(\"PSV Eindhoven\", 0:6, sep=\" - \")\nrownames(goals_payout) <- paste(\"AZ Alkmaar\", 0:6, sep=\" - \")\ngoals_payout <- round(goals_payout, 1)\nprint(xtable(goals_payout, align=\"cccccccc\"), type=\"html\")\n```\n\n                    PSV Eindhoven - 0   PSV Eindhoven - 1   PSV Eindhoven - 2   PSV Eindhoven - 3   PSV Eindhoven - 4   PSV Eindhoven - 5   PSV Eindhoven - 6\n  ---------------- ------------------- ------------------- ------------------- ------------------- ------------------- ------------------- -------------------\n   AZ Alkmaar - 0         20.70               12.20               13.00               21.20               45.20              120.00              306.10\n   AZ Alkmaar - 1         18.30               9.50                10.40               16.90               36.30               94.30              238.10\n   AZ Alkmaar - 2         29.60               15.90               16.30               27.10               54.50              168.50              625.00\n   AZ Alkmaar - 3         67.00               36.10               38.80               70.80              153.10              441.20              1363.60\n   AZ Alkmaar - 4        208.30              112.80              135.10              214.30              454.50              1363.60             3750.00\n   AZ Alkmaar - 5        937.50              428.60              625.00              714.30              1875.00             7500.00            15000.00\n   AZ Alkmaar - 6        3750.00             2142.90             7500.00             3000.00             7500.00               Inf                 Inf\n\nThe most likely result is 1 - 1 with a predicted payout of 9.70, which\ncan be compared to the William Hill payout of 7.50 for this bet. This,\nwe can earn some extra money if we bet on this end score.\n\n## Appendix\n\n### Who do you call?\n\nYou can contact me at my GitHub email address if you would like to share\nyour thoughts.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}